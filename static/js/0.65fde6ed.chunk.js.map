{"version":3,"sources":["../../sdk/js/lib/solana/migration/wormhole_migration_bg.js","../node_modules/webpack/buildin/harmony-module.js","../../sdk/js/lib/solana/migration/wormhole_migration.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","takeObject","idx","ret","getObject","dropObject","add_liquidity","program_id","from_mint","to_mint","liquidity_token_account","lp_share_token_account","amount","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","low5","high5","remove_liquidity","claim_shares","output_token_account","create_pool","payer","migrate_tokens","input_token_account","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","pool_address","retptr","r0","r1","v3","authority_address","v1","share_mint_address","pool","v2","from_custody_address","to_custody_address","parse_pool","data","passArray8ToWasm0","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/0.65fde6ed.chunk.js","sourcesContent":["import * as wasm from './wormhole_migration_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} liquidity_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nexport function add_liquidity(program_id, from_mint, to_mint, liquidity_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(liquidity_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.add_liquidity(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} liquidity_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nexport function remove_liquidity(program_id, from_mint, to_mint, liquidity_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(liquidity_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.remove_liquidity(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} output_token_account\n* @param {string} lp_share_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nexport function claim_shares(program_id, from_mint, to_mint, output_token_account, lp_share_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(output_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(lp_share_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.claim_shares(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} from_mint\n* @param {string} to_mint\n* @returns {any}\n*/\nexport function create_pool(program_id, payer, from_mint, to_mint) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.create_pool(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @param {string} input_token_account\n* @param {string} output_token_account\n* @param {BigInt} amount\n* @returns {any}\n*/\nexport function migrate_tokens(program_id, from_mint, to_mint, input_token_account, output_token_account, amount) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(input_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(output_token_account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    uint64CvtShim[0] = amount;\n    var low5 = u32CvtShim[0];\n    var high5 = u32CvtShim[1];\n    var ret = wasm.migrate_tokens(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, low5, high5);\n    return takeObject(ret);\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @param {string} from_mint\n* @param {string} to_mint\n* @returns {Uint8Array}\n*/\nexport function pool_address(program_id, from_mint, to_mint) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(from_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(to_mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.pool_address(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function authority_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nexport function share_mint_address(program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.share_mint_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nexport function from_custody_address(program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.from_custody_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {string} pool\n* @returns {Uint8Array}\n*/\nexport function to_custody_address(program_id, pool) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(pool, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.to_custody_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_pool(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_pool(ptr0, len0);\n    return takeObject(ret);\n}\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}\n;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export * from \"./wormhole_migration_bg.js\";\n"],"sourceRoot":""}